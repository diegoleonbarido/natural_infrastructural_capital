library(WriteXLS)
library(sqldf)
out <- mean(x<-(c(3,7)))
out
out <- mean(x= (c(3,7)))
out
mean(y=c(3,7))
x<-0
y<-0
mean(y=c(3,7))
x
y
mean(y<-c(3,7))
mean(y=c(3,7))
mean(c(3,7))
y = c(3,7)
y
y <- c(3,7)
y
mean(y)
mean(x)
apply
n <- 5
df <- data.frame(rep('a',n), rnorm(n),rnrm(n))
df <- data.frame(rep('a',n), rnorm(n),rnorm(n))
df
?rep
?rnorm
debug(apply)
sys.nframe()
parent.frame()
print(parent.frame())
g <- function(y) {#
  gg <- function() {#
    # this gives us the information from sys.calls(), sys.parents() and sys.frames() as one object#
    #print(sys.status())#
    tmp <- sys.status()#
    print(tmp)#
  }#
  if(y > 0) g(y-1) else gg()#
}
g(3)
out <- paste("My", "name", "is", "Chris", ".", sep = " ")
out
paste(c("My", "name", "is", "Chris", "."), collapse = " ") # equivalent
strsplit(out, split = ' ')
tyoe(out)
type(out)
out <- c(out,'Her Name is Sarah')
out
strsplit(out, split = ' ')
vars <- c("P", "HCA24", "SOH02")
vars
substring(vars, 2, 3)
vars <- c("date98", "size98", "x98weights98", "sdfsd")
grep("98", vars)
gregexpr("98", vars)
gsub("98", "04", vars)
vars
options(width=55)
library(codetools)
findGlobals(lm)[1:25]
f <- function() { y <- 3;print(x+y)}
f
findGlobals(f)
options()$warn
debug(lm)
n <- nrow(mtcars)
lm(mpg ~ disp,data=mtcars)
data[1:3,]
print(n)
n
print(mf)
model.response(mf[1:5,],"numeric")
undebut(lm)
undebug(lm)
library(MASS)
gamma.est <- function(data) {#
  # this fits a gamma distribution to a collection of numbers#
  m <- mean(data)#
  v <- var(data)#
  s <- v/m#
  a <- m/s#
  return(list(a=a,s=s))#
}#
#
calcVar = function(estimates){#
  var.of.ests <- apply(estimates, 2, var)#
  return(((n-1)^2/n)*var.of.ests)#
}#
#
gamma.jackknife.2 <- function(data) {#
  ## jackknife the estimation#
  n <- length(data)#
  jack.estimates = gamma.est(data[-1])#
  for (omitted.point in 2:n) {#
    jack.estimates = rbind(jack.estimates, gamma.est(data[-omitted.point]))#
  }#
  jack.var = calcVar(jack.estimates)#
  return(sqrt(jack.var))#
}
gamma.jackknife.2(cats$Hwt)
traceback()
options(error=recover)
gamma.jackknife.2(cats$Hwt)
estimates
apply(estimates, 2, var)
var(estimates, 2,var)
estimates[,1]
class(estimates)
options(error=NULL)
sizes <- function(){#
  # fails because obj has character strings of object names not objects itself#
  pfr = parent.frame()#
  objSizes=sapply(ls(pfr), function(obj) {#
    object.size(obj) # original code#
  })#
  print(objSizes)#
}
testFun <- function() {#
  x <- rnorm(1e6)#
  y <- rnorm(1e3)#
  z <- 5#
  sizes()#
}
object.size(rnorm(1e6))#
object.size(rnorm(1e3))#
object.size(5)
testFun()
sizes <- function(){#
  ## should work though haven't test extensively#
  pfr = parent.frame()#
#
  getSize <- function(obj, fr) {#
    object.size(eval(as.name(obj), envir = fr))#
    ## alternatively:#
    ## object.size(get(obj, fr))#
  }#
  objSizes=sapply(ls(pfr), getSize, pfr)#
  print(objSizes)#
}
testFun()
sizes <- function(){#
  pfr = parent.frame()#
#
  getSize <- function(obj) {#
    object.size(eval(as.name(obj)))#
  }#
  objSizes=sapply(ls(pfr), getSize)#
  print(objSizes)#
}#
#
testFun()
Plotting solar and microgrid projects#
#
library(maptools)#
#
#Setting the directory#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
#
#Kenya Shape File#
kenya_shapefile <- readShapePoly('county/County.shp')#
plot(kenya_shapefile)
Plotting solar and microgrid projects#
#
library(maptools)#
#
#Setting the directory#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
#
#Kenya Shape File#
kenya_shapefile <- readShapePoly('county/County.shp')#
plot(kenya_shapefile)#
#
### Plotting microgrids and solar projects#
#
setwd('/Users/Diego/Desktop/IBM/Raw_Data')#
power <- read.csv('everyone.csv')#
#
government <- subset(power, power$Company == 'government' & power$Type =='microgrid')#
points(government$Lng, government$Lat,pch=19,col='cornflowerblue',cex=0.8,add= TRUE)#
#
solar_entrepreneur <- subset(power,power$Type =='solar')#
points(solar_entrepreneur$Lng, solar_entrepreneur$Lat,pch=19,col='orange',cex=0.7,add= TRUE)#
#
micro_entrepreneur <- subset(power, power$Company != 'government' & power$Type =='microgrid')#
points(micro_entrepreneur$Lng, micro_entrepreneur$Lat,pch=19,col='purple',cex=0.7,add= TRUE)#
#
green_fields <- subset(power, power$Type =='green_fields')#
points(green_fields$Lng, green_fields$Lat,pch=19,col='green',cex=0.7,add= TRUE)#
### Plotting the transmission line Kenya Transmission - AIKP#
#
#Kenya Shape File#
trans_shape <- readShapeLines('Kenya_Ag_Data/Kenya Transmission - AIKP/Kenya Electricity Transmission Network.shp')#
plot(trans_shape,col='red',add=TRUE)#
#
legend( x="bottomleft",legend=c("Government Owned Microgrids","Proposed Microgrid","Microgrid Entrepreneur","PV Shop"),col=c("cornflowerblue","green","purple","orange"), pch=c(20,20,20,20),cex=0.6 )
legend( x="bottomleft",legend=c("Government Owned Microgrids","Proposed Microgrids","Microgrid Entrepreneurs","PV Shop"),col=c("cornflowerblue","green","purple","orange"), pch=c(20,20,20,20),cex=0.6 )
pch=c(NA,15,NA,17), merge=FALSE )
legend(x="bottomright", legend=c("Red line","blue points","Green line","purple points"),col=c("red","blue","green","purple"), lwd=1, lty=c(1,NA,2,NA),pch=c(NA,15,NA,17), merge=FALSE )
legend( x="bottomleft",legend=c("Transmission Grid","Government Owned Microgrids","Proposed Microgrids","Microgrid Entrepreneurs","PV Shop"),col=c("cornflowerblue","green","purple","orange"), pch=c(20,20,20,20),cex=0.6 )
legend( x="bottomleft",legend=c("Transmission Grid","Government Owned Microgrids","Proposed Microgrids","Microgrid Entrepreneurs","PV Shop"),col=c("cornflowerblue","green","purple","orange"), lwd =1, lty=c(1,NA,NA,NA,NA), pch=c(20,20,20,20),cex=0.6,merge=FALSE )
Plotting solar and microgrid projects#
#
library(maptools)#
#
#Setting the directory#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
#
#Kenya Shape File#
kenya_shapefile <- readShapePoly('county/County.shp')#
plot(kenya_shapefile)#
#
### Plotting microgrids and solar projects#
#
setwd('/Users/Diego/Desktop/IBM/Raw_Data')#
power <- read.csv('everyone.csv')#
#
government <- subset(power, power$Company == 'government' & power$Type =='microgrid')#
points(government$Lng, government$Lat,pch=19,col='cornflowerblue',cex=0.8,add= TRUE)#
#
solar_entrepreneur <- subset(power,power$Type =='solar')#
points(solar_entrepreneur$Lng, solar_entrepreneur$Lat,pch=19,col='orange',cex=0.7,add= TRUE)#
#
micro_entrepreneur <- subset(power, power$Company != 'government' & power$Type =='microgrid')#
points(micro_entrepreneur$Lng, micro_entrepreneur$Lat,pch=19,col='purple',cex=0.7,add= TRUE)#
#
green_fields <- subset(power, power$Type =='green_fields')#
points(green_fields$Lng, green_fields$Lat,pch=19,col='green',cex=0.7,add= TRUE)#
### Plotting the transmission line Kenya Transmission - AIKP#
#
#Kenya Shape File#
trans_shape <- readShapeLines('Kenya_Ag_Data/Kenya Transmission - AIKP/Kenya Electricity Transmission Network.shp')#
plot(trans_shape,col='red',add=TRUE)
legend( x="bottomleft",legend=c("Transmission Grid","Government Owned Microgrids","Proposed Microgrids","Microgrid Entrepreneurs","PV Shop"),col=c("cornflowerblue","green","purple","orange"), lwd =1, lty=c(1,NA,NA,NA,NA), pch=c(20,20,20,20),cex=0.6,merge=FALSE )
legend( x="bottomleft",legend=c("Transmission Grid","Government Owned Microgrids","Proposed Microgrids","Microgrid Entrepreneurs","PV Shop"),col=c("red","cornflowerblue","green","purple","orange"), lwd =1, lty=c(1,NA,NA,NA,NA), pch=c(20,20,20,20),cex=0.6,merge=FALSE )
Plotting solar and microgrid projects#
#
library(maptools)#
#
#Setting the directory#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
#
#Kenya Shape File#
kenya_shapefile <- readShapePoly('county/County.shp')#
plot(kenya_shapefile)#
#
### Plotting microgrids and solar projects#
#
setwd('/Users/Diego/Desktop/IBM/Raw_Data')#
power <- read.csv('everyone.csv')#
#
government <- subset(power, power$Company == 'government' & power$Type =='microgrid')#
points(government$Lng, government$Lat,pch=19,col='cornflowerblue',cex=0.8,add= TRUE)#
#
solar_entrepreneur <- subset(power,power$Type =='solar')#
points(solar_entrepreneur$Lng, solar_entrepreneur$Lat,pch=19,col='orange',cex=0.7,add= TRUE)#
#
micro_entrepreneur <- subset(power, power$Company != 'government' & power$Type =='microgrid')#
points(micro_entrepreneur$Lng, micro_entrepreneur$Lat,pch=19,col='purple',cex=0.7,add= TRUE)#
#
green_fields <- subset(power, power$Type =='green_fields')#
points(green_fields$Lng, green_fields$Lat,pch=19,col='green',cex=0.7,add= TRUE)#
### Plotting the transmission line Kenya Transmission - AIKP#
#
#Kenya Shape File#
trans_shape <- readShapeLines('Kenya_Ag_Data/Kenya Transmission - AIKP/Kenya Electricity Transmission Network.shp')#
plot(trans_shape,col='red',add=TRUE)
legend( x="bottomleft",legend=c("Transmission Grid","Government Owned Microgrids","Proposed Microgrids","Microgrid Entrepreneurs","PV Shop"),col=c("red","cornflowerblue","green","purple","orange"), lwd =1, lty=c(1,NA,NA,NA,NA), pch=c(NA,20,20,20,20),cex=0.6,merge=FALSE )
Plotting solar and microgrid projects#
#
library(maptools)#
#
#Setting the directory#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
#
#Kenya Shape File#
kenya_shapefile <- readShapePoly('county/County.shp')#
plot(kenya_shapefile)#
#
### Plotting microgrids and solar projects#
#
setwd('/Users/Diego/Desktop/IBM/Raw_Data')#
power <- read.csv('everyone.csv')#
#
government <- subset(power, power$Company == 'government' & power$Type =='microgrid')#
points(government$Lng, government$Lat,pch=19,col='cornflowerblue',cex=0.8,add= TRUE)#
#
solar_entrepreneur <- subset(power,power$Type =='solar')#
points(solar_entrepreneur$Lng, solar_entrepreneur$Lat,pch=19,col='orange',cex=0.7,add= TRUE)#
#
micro_entrepreneur <- subset(power, power$Company != 'government' & power$Type =='microgrid')#
points(micro_entrepreneur$Lng, micro_entrepreneur$Lat,pch=19,col='purple',cex=0.7,add= TRUE)#
#
green_fields <- subset(power, power$Type =='green_fields')#
points(green_fields$Lng, green_fields$Lat,pch=19,col='green',cex=0.7,add= TRUE)#
### Plotting the transmission line Kenya Transmission - AIKP#
#
#Kenya Shape File#
trans_shape <- readShapeLines('Kenya_Ag_Data/Kenya Transmission - AIKP/Kenya Electricity Transmission Network.shp')#
plot(trans_shape,col='red',add=TRUE)
legend( x="bottomleft",legend=c("Transmission Grid","Government Owned Microgrids","Proposed Microgrids","Microgrid Entrepreneurs","PV Shop"),col=c("red","cornflowerblue","green","purple","orange"), lwd =1, lty=c(1,NA,NA,NA,NA), pch=c(NA,20,20,20,20),cex=0.6,merge=FALSE )
Analysis: Calculates Descriptive Statistics and Plots the Results on the Map#
#
#Diego#
#
#NOTE: Uses the cleaning data code.#
#
#Setting up the libraries#
library(maptools)#
library(RColorBrewer)#
#
setwd('/Users/Diego/Desktop/IBM/Raw_Data')#
#
complementary_infrastructure <- read.csv('complementary_infrastructure_correct_names.csv')#
population <- read.csv('population.csv')#
#
#######				#
#Uploading and creating a data frame for the complementary infrastructure in the region#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
wards_shapefile <- readShapePoly('wards/OGRGeoJSON.shp')#
wards <- data.frame(wards_shapefile)
Plotting Complementary Infrastructure Data to Explore It#
# Data: Includes agriculture, roads, towns, irrigation, and proposed irrigation projects.#
############################
#
#Installing libraries#
library(maptools)#
library(rgdal)#
library(RColorBrewer)#
#
#Setting the directory#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
#
#Kenya Shape File#
kenya_shapefile <- readShapePoly('county/County.shp')#
kenya <- data.frame(kenya_shapefile)#
plot(kenya_shapefile)
Crops Irrigated #
#Note irrigation projects are to be completed with http://www.nib.or.ke/map-of-projects#
crop_irrigation <- readShapePoly('ke_crops_irrig/ke_crops_irrig.shp')#
	#Crops that are actually irrigated#
	irrigated <- subset(crop_irrigation, IRRIGATED>0)#
	#data.frame(irrigated)#
	plot(irrigated,col = brewer.pal(9,"YlGnBu"), add = TRUE)#
	irrigation_data <- data.frame(irrigated)#
	#Small Scale Irrigation#
	small_scale_irrigation <- readShapePoints('ke_small_scale_irrigation/ke_small_scale_irrigation.shp')#
	#data.frame(small_scale_irrigation)#
	plot(small_scale_irrigation, col ='deepskyblue', pch = 19, cex=0.3,add= TRUE)#
	small_irrigation_data <- data.frame(small_scale_irrigation)#
	#Proposed Irrigation Projects#
	proposed_irrigation <- readShapePoints('ke_proposed_irrigation/ke_proposed_irrigation.shp')#
	#data.frame(proposed_irrigation)#
	plot(proposed_irrigation, col ='dodgerblue4', pch = 19, cex=0.5,add= TRUE)#
	#Government Large Scale Irrigation Projects#
	government_irrigation <- read.csv('irrigation_data.csv')#
	points(government_irrigation$long,government_irrigation$lat,pch=19,col='red',cex=0.4)
Plotting Rivers#
	rivers_and_basins <- readShapeLines('Rivers/Rivers')#
	#data.frame(irrigated)#
	plot(rivers_and_basins,col = 'blue', add = TRUE)#
	water <- data.frame(ke_water_basins)
Crop Intensity#
crop_intensity <- readShapePoly('ke_crops_intensity/ke_crops_intensity.shp')#
diversity_data <- data.frame(crop_intensity)#
plot(crop_intensity,col = brewer.pal(9,"YlOrBr"), add= TRUE)
Small Scale Irrigation#
	small_scale_irrigation <- readShapePoints('ke_small_scale_irrigation/ke_small_scale_irrigation.shp')#
	#data.frame(small_scale_irrigation)#
	plot(small_scale_irrigation, col ='red', pch = 19, cex=0.3,add= TRUE)#
	small_irrigation_data <- data.frame(small_scale_irrigation)#
	#Proposed Irrigation Projects#
	proposed_irrigation <- readShapePoints('ke_proposed_irrigation/ke_proposed_irrigation.shp')#
	#data.frame(proposed_irrigation)#
	plot(proposed_irrigation, col ='red', pch = 19, cex=0.5,add= TRUE)#
	#Government Large Scale Irrigation Projects#
	government_irrigation <- read.csv('irrigation_data.csv')#
	points(government_irrigation$long,government_irrigation$lat,pch=19,col='red',cex=0.4)
Plotting Complementary Infrastructure Data to Explore It#
# Data: Includes agriculture, roads, towns, irrigation, and proposed irrigation projects.#
############################
#
#Installing libraries#
library(maptools)#
library(rgdal)#
library(RColorBrewer)#
#
#Setting the directory#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
#
#Kenya Shape File#
kenya_shapefile <- readShapePoly('county/County.shp')#
kenya <- data.frame(kenya_shapefile)#
plot(kenya_shapefile)
Small Scale Irrigation#
	small_scale_irrigation <- readShapePoints('ke_small_scale_irrigation/ke_small_scale_irrigation.shp')#
	#data.frame(small_scale_irrigation)#
	plot(small_scale_irrigation, col ='deepskyblue', pch = 19, cex=0.3,add= TRUE)#
	small_irrigation_data <- data.frame(small_scale_irrigation)#
	#Proposed Irrigation Projects#
	proposed_irrigation <- readShapePoints('ke_proposed_irrigation/ke_proposed_irrigation.shp')#
	#data.frame(proposed_irrigation)#
	plot(proposed_irrigation, col ='deepskyblue', pch = 19, cex=0.5,add= TRUE)#
	#Government Large Scale Irrigation Projects#
	government_irrigation <- read.csv('irrigation_data.csv')#
	points(government_irrigation$long,government_irrigation$lat,pch=19,col='deepskyblue',cex=0.4)#
	#Plotting Rivers#
	rivers_and_basins <- readShapeLines('Rivers/Rivers')#
	#data.frame(irrigated)#
	plot(rivers_and_basins,col = 'blue', add = TRUE)#
	water <- data.frame(ke_water_basins)
legend( x="bottomleft",legend=c("Rivers","Small, Large, and Government Ran Irrigation Projects"),col=c("blue","deepskyblue"), lwd =1, lty=c(1,NA), pch=c(NA,20),cex=0.6,merge=FALSE )
Plotting Complementary Infrastructure Data to Explore It#
# Data: Includes agriculture, roads, towns, irrigation, and proposed irrigation projects.#
############################
#
#Installing libraries#
library(maptools)#
library(rgdal)#
library(RColorBrewer)#
#
#Setting the directory#
setwd('/Users/Diego/Desktop/IBM/Raw_Data/Kenya_Ag_Data')#
#
#Kenya Shape File#
kenya_shapefile <- readShapePoly('county/County.shp')#
kenya <- data.frame(kenya_shapefile)#
plot(kenya_shapefile)
Small Scale Irrigation#
	small_scale_irrigation <- readShapePoints('ke_small_scale_irrigation/ke_small_scale_irrigation.shp')#
	#data.frame(small_scale_irrigation)#
	plot(small_scale_irrigation, col ='deepskyblue', pch = 19, cex=0.3,add= TRUE)#
	small_irrigation_data <- data.frame(small_scale_irrigation)#
	#Proposed Irrigation Projects#
	proposed_irrigation <- readShapePoints('ke_proposed_irrigation/ke_proposed_irrigation.shp')#
	#data.frame(proposed_irrigation)#
	plot(proposed_irrigation, col ='deepskyblue', pch = 19, cex=0.5,add= TRUE)#
	#Government Large Scale Irrigation Projects#
	government_irrigation <- read.csv('irrigation_data.csv')#
	points(government_irrigation$long,government_irrigation$lat,pch=19,col='deepskyblue',cex=0.4)#
	#Plotting Rivers#
	rivers_and_basins <- readShapeLines('Rivers/Rivers')#
	#data.frame(irrigated)#
	plot(rivers_and_basins,col = 'blue', add = TRUE)#
	water <- data.frame(ke_water_basins)
legend( x="bottomleft",legend=c("Rivers","Small, Large, and Government Ran Irrigation Projects"),col=c("blue","deepskyblue"), lwd =1, lty=c(1,NA), pch=c(NA,20),cex=0.6,merge=FALSE )
